<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgai.property.ctl.dao.CtlProgDao">
    
	<sql id="ctlProgColumns">
		a.id AS "id",
		a.prog_code AS "progCode",
		a.sbs_code AS "sbsCode",
		a.sbs_name AS "sbsName",
		a.prog_name AS "progName",
		a.prog_path AS "progPath",
		a.prog_level AS "progLevel",
		a.prog_type AS "progType",
		a.log_level AS "logLevel",
		a.parent_prog_code AS "parentProgCode",
		a.sys_flag AS "sysFlag",
		a.init_check_flag AS "initCheckFlag",
		a.lines_perpage AS "linesPerpage",
		a.remark AS "remark",
		a.version AS "version",
		a.updated_dt AS "updatedDt",
		a.updated_by AS "updatedBy",
		a.created_dt AS "createdDt",
		a.created_by AS "createdBy",
		a.remarks AS "remarks"
	</sql>
	
	<sql id="ctlProgJoins">
	</sql>
    
	<select id="get" resultType="CtlProg">
		SELECT 
			<include refid="ctlProgColumns"/>
		FROM ctl_prog a
		<include refid="ctlProgJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CtlProg">
		SELECT 
			<include refid="ctlProgColumns"/>
		FROM ctl_prog a
		<include refid="ctlProgJoins"/>
		<where>
			<if test="progCode != null and progCode != ''">
				AND a.prog_code = #{progCode}
			</if>
			<if test="progName != null and progName != ''">
				AND a.prog_name like '%${progName}%'
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CtlProg">
		SELECT 
			<include refid="ctlProgColumns"/>
		FROM ctl_prog a
		<include refid="ctlProgJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findCtlProg"  resultType="CtlProg" >
		select 
		  <include refid="ctlProgColumns"/>
		from CTL_PROG a 
		where a.PROG_PATH like '%'||#{arg0}  and
		      a.PROG_LEVEL= #{arg1}
	</select>
	

	<insert id="insert">
		INSERT INTO ctl_prog(
			id,
			prog_code,
			sbs_code,
			sbs_name,
			prog_name,
			prog_path,
			prog_level,
			prog_type,
			log_level,
			parent_prog_code,
			sys_flag,
			init_check_flag,
			lines_perpage,
			remark,
			version,
			updated_dt,
			updated_by,
			created_dt,
			created_by,
			remarks
		) VALUES (
			#{id},
			#{progCode},
			#{sbsCode},
			#{sbsName},
			#{progName},
			#{progPath},
			#{progLevel},
			#{progType},
			#{logLevel},
			#{parentProgCode},
			#{sysFlag},
			#{initCheckFlag},
			#{linesPerpage},
			#{remark},
			#{version},
			#{updatedDt},
			#{updatedBy},
			#{createdDt},
			#{createdBy},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE ctl_prog SET 	
			prog_code = #{progCode},
			sbs_code = #{sbsCode},
			sbs_name = #{sbsName},
			prog_name = #{progName},
			prog_path = #{progPath},
			prog_level = #{progLevel},
			prog_type = #{progType},
			log_level = #{logLevel},
			parent_prog_code = #{parentProgCode},
			sys_flag = #{sysFlag},
			init_check_flag = #{initCheckFlag},
			lines_perpage = #{linesPerpage},
			remark = #{remark},
			version = #{version},
			updated_dt = #{updatedDt},
			updated_by = #{updatedBy},
			created_dt = #{createdDt},
			created_by = #{createdBy},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM ctl_prog
		WHERE id = #{id}
	</update>
	
</mapper>